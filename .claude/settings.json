{
  "project": {
    "name": "StellarIX UI",
    "type": "monorepo",
    "description": "Framework-agnostic headless component library"
  },
  "rules": {
    "critical": [
      "ðŸš¨ NEVER call state.getState() ANYWHERE in logic layer files - CAUSES INFINITE LOOPS",
      "ðŸš¨ NEVER call state.getState() in event handlers - FORBIDDEN",
      "ðŸš¨ NEVER call state.getState() in getInteractionHandlers() - FORBIDDEN", 
      "ðŸš¨ NEVER call state.getState() in getA11yProps() - FORBIDDEN",
      "ðŸš¨ NEVER call state.getState() in interactions generator - FORBIDDEN",
      "ALWAYS use (currentState, handleEvent) parameters in interactions",
      "ALWAYS use (state) parameter in a11y functions",
      "ALWAYS set dts: false in tsup.config.ts",
      "ALWAYS run tests with timeout protection",
      "ALWAYS create Storybook stories after implementing components"
    ],
    "forbidden_patterns": [
      {
        "pattern": "state.getState()",
        "context": "inside logic layer methods",
        "reason": "Causes infinite loops in reactive contexts"
      },
      {
        "pattern": "dts: true",
        "context": "tsup.config.ts",
        "reason": "DTS generation fails due to module resolution"
      },
      {
        "pattern": "while(true)",
        "context": "anywhere without break condition",
        "reason": "Creates infinite loops"
      }
    ],
    "required_patterns": [
      {
        "pattern": "timeout [seconds]s [command]",
        "context": "when running tests or builds",
        "reason": "Prevents hanging on infinite loops"
      },
      {
        "pattern": "use state parameter",
        "context": "logic layer's interactions and a11y generators",
        "reason": "Avoids circular dependencies"
      }
    ]
  },
  "testing": {
    "runner": "vitest",
    "environment": "happy-dom",
    "timeout": 30,
    "coverage": {
      "core": 90,
      "components": 80
    }
  },
  "build": {
    "tool": "tsup",
    "dts": false,
    "external": ["@stellarix/core", "@stellarix/utils"]
  }
}