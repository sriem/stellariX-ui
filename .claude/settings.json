{
  "project": {
    "name": "StellarIX UI",
    "type": "monorepo",
    "description": "Framework-agnostic headless component library"
  },
  "rules": {
    "critical": [
      "ðŸš¨ðŸš¨ðŸš¨ NEVER EVER call state.getState() ANYWHERE in logic layer files - CAUSES INFINITE LOOPS - HARD FORBIDDEN",
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in event handlers - WILL BREAK EVERYTHING",
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in withInteraction callbacks - FORBIDDEN", 
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in getA11yProps() - FORBIDDEN",
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in interactions generator - FORBIDDEN",
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in any reactive context - FORBIDDEN",
      "ðŸš¨ðŸš¨ðŸš¨ NEVER call state.getState() in tests - use callbacks to verify behavior instead",
      "ALWAYS use (currentState, event) parameters in withInteraction callbacks",
      "ALWAYS use (state) parameter in withA11y functions",
      "ALWAYS use LogicLayerBuilder pattern for logic implementations",
      "ALWAYS handle event payload extraction: const event = payload?.event ? payload.event : payload",
      "ALWAYS support both direct events and wrapped { event } payloads in onEvent handlers",
      "ALWAYS set dts: false in tsup.config.ts",
      "ALWAYS run tests with timeout protection",
      "ALWAYS create Storybook stories after implementing components",
      "ALWAYS update vitest.config.ts with path aliases",
      "ALWAYS extend '../../../tsconfig.json' not tsconfig.base.json",
      "ALWAYS test interactions via callbacks, not state inspection"
    ],
    "forbidden_patterns": [
      {
        "pattern": "state.getState()",
        "context": "inside logic layer methods",
        "reason": "Causes infinite loops in reactive contexts"
      },
      {
        "pattern": "expect(state.getState()",
        "context": "in test files",
        "reason": "Use callback verification instead of state inspection"
      },
      {
        "pattern": "createComponentLogic",
        "context": "logic layer implementation",
        "reason": "Use LogicLayerBuilder pattern instead for better control"
      },
      {
        "pattern": "dts: true",
        "context": "tsup.config.ts",
        "reason": "DTS generation fails due to module resolution"
      },
      {
        "pattern": "while(true)",
        "context": "anywhere without break condition",
        "reason": "Creates infinite loops"
      }
    ],
    "required_patterns": [
      {
        "pattern": "timeout [seconds]s [command]",
        "context": "when running tests or builds",
        "reason": "Prevents hanging on infinite loops"
      },
      {
        "pattern": "use state parameter",
        "context": "logic layer's interactions and a11y generators",
        "reason": "Avoids circular dependencies"
      }
    ]
  },
  "testing": {
    "runner": "vitest",
    "environment": "happy-dom",
    "timeout": 30,
    "coverage": {
      "core": 90,
      "components": 80
    }
  },
  "build": {
    "tool": "tsup",
    "dts": false,
    "external": ["@stellarix/core", "@stellarix/utils"]
  }
}